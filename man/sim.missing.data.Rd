% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sim.missing.data.R
\name{sim.missing.data}
\alias{sim.missing.data}
\title{Remove morphological character data}
\usage{
sim.missing.data(data = NULL, method = NULL, probability = NULL, traits = NULL)
}
\arguments{
\item{data}{A morpho object with sequence data}

\item{method}{Under what criteria data should be removed. Methods include "random" which randomly removes
characters across the entire matrix, "partition" which allows different partitions (that were used to simulate the data)
to loose varying amounts of characters, "rates" which removes characters based on the rate the were simulated under,
and "trait" where the user can specify particular traits to remove data.}

\item{probability}{The probability of missing data to simulate.}

\item{char}{Specify what traits you want to degrade data from}
}
\value{
An object of class morpho.
}
\description{
This function removes characters from a morphological matrix simulated using morphosim
}
\examples{
# simulated tree
phy <- ape::rtree(10)

# simulate characters along the branches of the tree
transition_history <-  sim.morpho.history(tree = phy,
                                         k = 3,
                                         trait.num = 30,
                                         ancestral = TRUE,
                                         ACRV = "gamma",
                                         variable = FALSE)

# randomly remove data
missing.data <- sim.missing.data(data = transition_history, method = "random", probability = 1)

# remove data based on the rate it was simulated under
missing.data <- sim.missing.data(data = transition_history, method = "rate", probability = c(0,0,0.2,1))

# remove specific characters from specific traits
missing.data <- sim.missing.data(data = transition_history, method = "trait", probability = 1, traits = c(1,2,5))

# remove data based on the partition
missing.data <- sim.missing.data(data = transition_history, method = "partition", probability = c(1, 0, 1))
}
